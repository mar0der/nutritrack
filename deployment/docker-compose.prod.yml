# Production Docker Compose with Let's Encrypt certificates
version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: nutritrack-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: nutrition_db
      POSTGRES_USER: nutritrack
      POSTGRES_PASSWORD: ${DB_PASSWORD:-nutritrack123}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - nutritrack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nutritrack -d nutrition_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: ../backend
      dockerfile: ../deployment/Dockerfile.backend
    container_name: nutritrack-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://nutritrack:${DB_PASSWORD:-nutritrack123}@db:5432/nutrition_db
      PORT: 3001
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key-for-development-only}
      FRONTEND_URL: https://${DOMAIN_NAME:-78.47.123.191}
      DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nutritrack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: nutritrack-web
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-/api}
      DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - nutritrack
    volumes:
      # Let's Encrypt certificates
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
      # Production nginx config
      - ./nginx-production.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for certificate renewal
  certbot:
    image: certbot/certbot:latest
    container_name: nutritrack-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - web
    command: >
      sh -c "
        trap exit TERM;
        while :; do
          sleep 12h & wait $!;
          echo 'Checking for certificate renewal...';
          certbot renew --webroot --webroot-path=/var/www/certbot --quiet --deploy-hook 'docker-compose restart web';
        done
      "

networks:
  nutritrack:
    driver: bridge
    name: nutritrack

volumes:
  db_data:
    driver: local